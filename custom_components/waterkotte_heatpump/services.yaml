set_holiday:
  # Service name as shown in UI
  name: Set Holiday
  # Description of the service
  description: Sets start and end times for holiday mode.
  # If the service accepts entity IDs, target allows the user to specify entities by entity, device, or area. If `target` is specified, `entity_id` should not be defined in the `fields` map. By default it shows only targets matching entities from the same domain as the service, but if further customization is required, target supports the entity, device, and area selectors (https://www.home-assistant.io/docs/blueprint/selectors/). Entity selector parameters will automatically be applied to device and area, and device selector parameters will automatically be applied to area.
  #target:
  # Different fields that your service accepts
  fields:
    # Key of the field
    start:
      # Field name as shown in UI
      name: Start Time & Date
      # Description of the field
      description: Set the beginning of the holiday
      # Whether or not field is required (default = false)
      required: true
      # Advanced fields are only shown when the advanced mode is enabled for the user (default = false)
      # advanced: true
      # Example value that can be passed for this field
      #example: "low"
      # The default field value
      #default: "high"
      selector:
        datetime:
      # Selector (https://www.home-assistant.io/docs/blueprint/selectors/) to control the input UI for this field
      #selector:
      #  select:
      #    options:
      #      - "off"
      #      - "low"
      #      - "medium"
      #      - "high"

    end:
      name: End Time & Date
      description: Set the end of the holiday
      required: true
      selector:
        datetime:

set_disinfection_start_time:
  # Service name as shown in UI
  name: Set disinfection start time
  # Description of the service
  description: Set the start time for disinfection
  # If the service accepts entity IDs, target allows the user to specify entities by entity, device, or area. If `target` is specified, `entity_id` should not be defined in the `fields` map. By default it shows only targets matching entities from the same domain as the service, but if further customization is required, target supports the entity, device, and area selectors (https://www.home-assistant.io/docs/blueprint/selectors/). Entity selector parameters will automatically be applied to device and area, and device selector parameters will automatically be applied to area.
  #target:
  # Different fields that your service accepts
  fields:
    # Key of the field
    starthhmm:
      # Field name as shown in UI
      name: Disinfection Start Time
      # Description of the field
      description: Set the disinfection start time
      # Whether or not field is required (default = false)
      required: true
      # Advanced fields are only shown when the advanced mode is enabled for the user (default = false)
      # advanced: true
      # Example value that can be passed for this field
      #example: "low"
      # The default field value
      #default: "high"
      selector:
        time:
      # Selector (https://www.home-assistant.io/docs/blueprint/selectors/) to control the input UI for this field
      #selector:
      #  select:
      #    options:
      #      - "off"
      #      - "low"
      #      - "medium"
      #      - "high"

set_schedule_data:
  # Service name as shown in UI
  name: Set a Schedule
  # Description of the service
  description: Setting the Schedule for a Type
  fields:
    schedule_type:
      name: "Type"
      description: "Select the Schedule you would like to adjust"
      required: true
      default: "heating"
      selector:
        select:
          multiple: false
          mode: dropdown
          translation_key: "set_schedule_data_schedule_type"
          options: [ "heating", "water", "cooling", "mix1", "mix2", "mix3", "pool", "buffer_tank_circulation_pump", "solar", "pv" ]

    enable:
      name: "Activate Schedule"
      description: " "
      required: true
      default: true
      selector:
        boolean:
    start_time:
      name: "Begin at"
      description: " "
      required: true
      default: "00:00:00"
      selector:
        time:
    end_time:
      name: "End at"
      description: " "
      required: true
      default: "00:00:00"
      selector:
        time:
    adj1_enable:
      name: "Activate adjustment I"
      description: " "
      required: false
      default: false
      selector:
        boolean:
    adj1_value:
      name: "Adjustment I value"
      description: " "
      required: false
      default: "0.0"
      selector:
        number:
          min: -10.0
          max: +10.0
          step: 0.1
          unit_of_measurement: "°K"
          mode: box
    adj1_start_time:
      name: "Adjustment I begin at"
      description: " "
      required: false
      default: "00:00:00"
      selector:
        time:
    adj1_end_time:
      name: "Adjustment I end at"
      description: " "
      required: false
      default: "00:00:00"
      selector:
        time:
    adj2_enable:
      name: "Activate adjustment II"
      description: " "
      required: false
      default: false
      selector:
        boolean:
    adj2_value:
      name: "Adjustment II value"
      description: " "
      required: false
      default: "0.0"
      selector:
        number:
          min: -10.0
          max: +10.0
          step: 0.1
          unit_of_measurement: "°K"
          mode: box
    adj2_start_time:
      name: "Adjustment II begin at"
      description: " "
      required: false
      default: "00:00:00"
      selector:
        time:
    adj2_end_time:
      name: "Adjustment II end at"
      description: " "
      required: false
      default: "00:00:00"
      selector:
        time:
    schedule_days:
      name: "Days"
      description: "Select the days you want to apply the setting of the Schedule"
      required: true
      selector:
        select:
          multiple: true
          mode: list
          translation_key: "set_schedule_data_schedule_days"
          options: ["1mo", "2tu", "3we", "4th", "5fr", "6sa", "7su"]

get_energy_balance:
  # Service name as shown in UI
  name: Get Current Year Energy Balance
  # Description of the service
  description: Get the energy balance by different usage for the current year

get_energy_balance_monthly:
  # Service name as shown in UI
  name: Get rolling 12 Month breakdown
  # Description of the service
  description: Gets the energy balance breakdown per month in a rolling 12 month window
